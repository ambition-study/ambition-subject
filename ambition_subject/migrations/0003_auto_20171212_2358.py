# Generated by Django 2.0 on 2017-12-12 21:58

import _socket
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.date_estimated
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.utils
import edc_protocol.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ambition_subject', '0002_auto_20171212_0625'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnrollmentW10',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('is_eligible', models.BooleanField(default=False, editable=False)),
                ('facility_name', models.CharField(help_text='The facility name is need when scheduling appointments if not specified on the edc_visit_schedule.Visit', max_length=25, verbose_name='To which facility is this subject being enrolled?')),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('consent_identifier', models.UUIDField()),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalEnrollmentW10',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('is_eligible', models.BooleanField(default=False, editable=False)),
                ('facility_name', models.CharField(help_text='The facility name is need when scheduling appointments if not specified on the edc_visit_schedule.Visit', max_length=25, verbose_name='To which facility is this subject being enrolled?')),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('consent_identifier', models.UUIDField()),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.AlterModelOptions(
            name='followup',
            options={'verbose_name': 'Follow-up', 'verbose_name_plural': 'Follow-up'},
        ),
        migrations.AlterModelOptions(
            name='followupdiagnoses',
            options={'verbose_name': 'Follow-up diagnosis', 'verbose_name_plural': 'Follow-up diagnoses'},
        ),
        migrations.AlterModelOptions(
            name='lumbarpuncturecsf',
            options={'verbose_name': 'Lumbar puncture/Cerebrospinal fluid', 'verbose_name_plural': 'Lumbar puncture/Cerebrospinal fluid'},
        ),
        migrations.AlterModelOptions(
            name='patienthistory',
            options={'verbose_name': "Patient's History", 'verbose_name_plural': "Patient's History"},
        ),
        migrations.AlterModelOptions(
            name='pkpdcrf',
            options={'verbose_name': 'PK/PD', 'verbose_name_plural': 'PK/PD'},
        ),
        migrations.AlterModelOptions(
            name='significantdiagnoses',
            options={'verbose_name': 'Significant Diagnosis', 'verbose_name_plural': 'Significant Diagnoses'},
        ),
        migrations.AddField(
            model_name='historicalprnmodel',
            name='chemistry',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add chemistry'),
        ),
        migrations.AddField(
            model_name='historicalprnmodel',
            name='fbc',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add FBC'),
        ),
        migrations.AddField(
            model_name='prnmodel',
            name='chemistry',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add chemistry'),
        ),
        migrations.AddField(
            model_name='prnmodel',
            name='fbc',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add FBC'),
        ),
        migrations.AlterField(
            model_name='amphotericinmisseddoses',
            name='ampho_missed_reason',
            field=models.CharField(blank=True, choices=[('toxicity', 'Toxicity'), ('missed', 'Missed'), ('refused', 'Refused'), ('not_required', 'Not required according to protocol'), ('OTHER', 'Other')], max_length=25, verbose_name='Reason:'),
        ),
        migrations.AlterField(
            model_name='bloodresult',
            name='cd4_units',
            field=models.CharField(blank=True, choices=[('cells/mm^3', 'cells/mm<sup>3</sup>')], default='cells/mm^3', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='bloodresult',
            name='neutrophil_units',
            field=models.CharField(blank=True, choices=[('10^9/L', '10sup>9</sup>/L')], default='10^9/L', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='bloodresult',
            name='platelets_units',
            field=models.CharField(blank=True, choices=[('10^9/L', '10sup>9</sup>/L')], default='10^9/L', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='bloodresult',
            name='results_reportable',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If YES, this value will open Adverse Event Form.<br/><br/>Note: On Day 1 only abnormal bloods should not be reported as adverseevents.', max_length=5, verbose_name='If any results are abnormal, are results within grade III or above?'),
        ),
        migrations.AlterField(
            model_name='bloodresult',
            name='wbc_units',
            field=models.CharField(blank=True, choices=[('10^3/L', '10sup>3</sup>/L')], default='10^3/L', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='clinicnote',
            name='cvs',
            field=models.TextField(max_length=100, verbose_name='CVS'),
        ),
        migrations.AlterField(
            model_name='fluconazolemisseddoses',
            name='flucon_missed_reason',
            field=models.CharField(blank=True, choices=[('toxicity', 'Toxicity'), ('missed', 'Missed'), ('refused', 'Refused'), ('not_required', 'Not required according to protocol'), ('OTHER', 'Other')], max_length=25, verbose_name='Reason:'),
        ),
        migrations.AlterField(
            model_name='flucytosinemisseddoses',
            name='flucy_missed_reason',
            field=models.CharField(blank=True, choices=[('toxicity', 'Toxicity'), ('missed', 'Missed'), ('refused', 'Refused'), ('not_required', 'Not required according to protocol'), ('OTHER', 'Other')], max_length=25, verbose_name='Reason:'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='behaviour_change',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Behaviour change'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='cn_palsy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='CN palsy'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='confusion',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Confusion'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='fluconazole_dose',
            field=models.CharField(choices=[('800mg_daily', '800mg daily'), ('OTHER', 'Other'), ('not_done', 'Not done')], max_length=25, verbose_name='Fluconazole dose (day prior to visit)'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='focal_neurology',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Focal neurology'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='headache',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Headache'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='patient_help',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], help_text='For example eating, drinking, washing, brushing teeth, going to the toilet', max_length=10, verbose_name='Does the patient require help from anybody for everyday activities? '),
        ),
        migrations.AlterField(
            model_name='followup',
            name='patient_problems',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, verbose_name='Has the illness left the patient with any other problems?'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='physical_symptoms',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Physical symptoms'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='rankin_score',
            field=models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Modified Rankin score'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='recent_seizure_less_72',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Recent seizure (<72 hrs)'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='rifampicin_start_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date Rifampicin started'),
        ),
        migrations.AlterField(
            model_name='followup',
            name='rifampicin_started',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('already_on_rifampicin', 'Already on Rifampicin'), ('not_done', 'Not done')], max_length=25, verbose_name='Rifampicin started since last visit?'),
        ),
        migrations.AlterField(
            model_name='followupdiagnoses',
            name='possible_diagnoses',
            field=models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('extra_pulmonary_tb', 'Extra-pulmonary TB'), ('kaposi_sarcoma', 'Kaposi-sarcoma'), ('malaria', 'Malaria'), ('bacteraemia', 'Bacteraemia'), ('pneumonia', 'Pneumonia'), ('diarrhoeal_wasting', 'Diarrhoeal wasting'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='Significant diagnoses:'),
        ),
        migrations.AlterField(
            model_name='historicalamphotericinmisseddoses',
            name='ampho_missed_reason',
            field=models.CharField(blank=True, choices=[('toxicity', 'Toxicity'), ('missed', 'Missed'), ('refused', 'Refused'), ('not_required', 'Not required according to protocol'), ('OTHER', 'Other')], max_length=25, verbose_name='Reason:'),
        ),
        migrations.AlterField(
            model_name='historicalbloodresult',
            name='cd4_units',
            field=models.CharField(blank=True, choices=[('cells/mm^3', 'cells/mm<sup>3</sup>')], default='cells/mm^3', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='historicalbloodresult',
            name='neutrophil_units',
            field=models.CharField(blank=True, choices=[('10^9/L', '10sup>9</sup>/L')], default='10^9/L', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='historicalbloodresult',
            name='platelets_units',
            field=models.CharField(blank=True, choices=[('10^9/L', '10sup>9</sup>/L')], default='10^9/L', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='historicalbloodresult',
            name='results_reportable',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If YES, this value will open Adverse Event Form.<br/><br/>Note: On Day 1 only abnormal bloods should not be reported as adverseevents.', max_length=5, verbose_name='If any results are abnormal, are results within grade III or above?'),
        ),
        migrations.AlterField(
            model_name='historicalbloodresult',
            name='wbc_units',
            field=models.CharField(blank=True, choices=[('10^3/L', '10sup>3</sup>/L')], default='10^3/L', max_length=10, null=True, verbose_name='units'),
        ),
        migrations.AlterField(
            model_name='historicalclinicnote',
            name='cvs',
            field=models.TextField(max_length=100, verbose_name='CVS'),
        ),
        migrations.AlterField(
            model_name='historicalfluconazolemisseddoses',
            name='flucon_missed_reason',
            field=models.CharField(blank=True, choices=[('toxicity', 'Toxicity'), ('missed', 'Missed'), ('refused', 'Refused'), ('not_required', 'Not required according to protocol'), ('OTHER', 'Other')], max_length=25, verbose_name='Reason:'),
        ),
        migrations.AlterField(
            model_name='historicalflucytosinemisseddoses',
            name='flucy_missed_reason',
            field=models.CharField(blank=True, choices=[('toxicity', 'Toxicity'), ('missed', 'Missed'), ('refused', 'Refused'), ('not_required', 'Not required according to protocol'), ('OTHER', 'Other')], max_length=25, verbose_name='Reason:'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='behaviour_change',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Behaviour change'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='cn_palsy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='CN palsy'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='confusion',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Confusion'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='fluconazole_dose',
            field=models.CharField(choices=[('800mg_daily', '800mg daily'), ('OTHER', 'Other'), ('not_done', 'Not done')], max_length=25, verbose_name='Fluconazole dose (day prior to visit)'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='focal_neurology',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Focal neurology'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='headache',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Headache'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='patient_help',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], help_text='For example eating, drinking, washing, brushing teeth, going to the toilet', max_length=10, verbose_name='Does the patient require help from anybody for everyday activities? '),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='patient_problems',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, verbose_name='Has the illness left the patient with any other problems?'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='physical_symptoms',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Physical symptoms'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='rankin_score',
            field=models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Modified Rankin score'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='recent_seizure_less_72',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Recent seizure (<72 hrs)'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='rifampicin_start_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date Rifampicin started'),
        ),
        migrations.AlterField(
            model_name='historicalfollowup',
            name='rifampicin_started',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('already_on_rifampicin', 'Already on Rifampicin'), ('not_done', 'Not done')], max_length=25, verbose_name='Rifampicin started since last visit?'),
        ),
        migrations.AlterField(
            model_name='historicalfollowupdiagnoses',
            name='possible_diagnoses',
            field=models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('extra_pulmonary_tb', 'Extra-pulmonary TB'), ('kaposi_sarcoma', 'Kaposi-sarcoma'), ('malaria', 'Malaria'), ('bacteraemia', 'Bacteraemia'), ('pneumonia', 'Pneumonia'), ('diarrhoeal_wasting', 'Diarrhoeal wasting'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='Significant diagnoses:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='closing_pressure',
            field=models.IntegerField(help_text='Units cm of H<sub>2</sub>O', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)]),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='csf_cr_ag',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate'), ('not_done', 'Not done')], max_length=15, null=True, verbose_name='CSF CrAg:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='csf_cr_ag_lfa',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=5, verbose_name='CSF CrAg done by CSF CrAg LFA:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='csf_culture',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], help_text='Complete after getting the results.', max_length=15, null=True, verbose_name='Other organism (non-Cryptococcus)'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='csf_wbc_cell_count',
            field=models.IntegerField(help_text='acceptable units are mm<sup>3</sup>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Total CSF WBC cell count:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='differential_lymphocyte_count',
            field=models.IntegerField(blank=True, help_text='acceptable units are mm<sup>3</sup> or %', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Differential lymphocyte cell count:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='differential_lymphocyte_unit',
            field=models.CharField(choices=[('mm3', 'mm<sup>3</sup>'), ('%', '%'), ('N/A', 'Not applicable')], default='N/A', max_length=6),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='differential_neutrophil_count',
            field=models.IntegerField(blank=True, help_text='acceptable units are mm<sup>3</sup> or %', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Differential neutrophil cell count:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='differential_neutrophil_unit',
            field=models.CharField(choices=[('mm3', 'mm<sup>3</sup>'), ('%', '%'), ('N/A', 'Not applicable')], default='N/A', max_length=3),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='india_ink',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate'), ('not_done', 'Not done')], max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='opening_pressure',
            field=models.IntegerField(help_text='Units cm of H<sub>2</sub>O', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)]),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='other_csf_culture',
            field=models.CharField(blank=True, max_length=75, null=True, verbose_name='If YES, specify organism:'),
        ),
        migrations.AlterField(
            model_name='historicallumbarpuncturecsf',
            name='reason_for_lp',
            field=models.CharField(choices=[('scheduled_per_protocol', 'Scheduled per protocol'), ('therapeutic_lp', 'Therapeutic LP'), ('clincal_deterioration', 'Clinical deterioration')], max_length=50, verbose_name='Reason for LP'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpenses',
            name='activities_missed',
            field=models.CharField(choices=[('working', 'Working'), ('studying', 'Studying'), ('caring_for_children', 'Caring for children'), ('maintaining_house', 'Maintaining the house'), ('nothing', 'Nothing'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='What would you have been doing if you were not sick with your present condition'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpenses',
            name='activities_missed_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpenses',
            name='care_before_hospital',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If YES, please complete medical expenses part 2', max_length=5, verbose_name='Have you received any treatment or care for your present condition, before coming to the hospital?'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpenses',
            name='form_of_transport',
            field=models.CharField(choices=[('bus', 'Bus'), ('train', 'Train'), ('ambulance', 'Ambulance'), ('private_taxi', 'Private taxi'), ('hired_motorbike', 'Hired motorbike'), ('own_car', 'Own car'), ('own_motorbike', 'Own motorbike'), ('bicycle', 'Bicycle'), ('foot', 'Foot'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name='Which form of transport did you take to get here today?'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpenses',
            name='travel_time',
            field=models.CharField(blank=True, help_text='Specify as hours:minutes (format HH:MM)', max_length=8, null=True, validators=[django.core.validators.RegexValidator('^([0-9]{1,3}:[0-5][0-9])$', message='Enter a valid time in hour:minutes format')], verbose_name='How long did it take you to reach there?'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpensestwodetail',
            name='care_provider_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpensestwodetail',
            name='location_care',
            field=models.CharField(choices=[('government_healthcare', 'Government healthcare'), ('private_healthcare', 'Private healthcare'), ('ngo_healthcare', 'NGO healthcare'), ('pharmacy', 'Pharmacy'), ('home', 'Home'), ('OTHER', 'Other')], max_length=35, verbose_name='Where did you receive treatment or care?'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpensestwodetail',
            name='other_place_visited',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If YES, click "Add another Medical Expenses Part 2: Detail" below.', max_length=15, verbose_name='Before this, did you go to another place for the treatment of the present situation?'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpensestwodetail',
            name='transport_duration',
            field=models.CharField(blank=True, help_text='Specify as hours:minutes (format HH:MM)', max_length=8, null=True, validators=[django.core.validators.RegexValidator('^([0-9]{1,3}:[0-5][0-9])$', message='Enter a valid time in hour:minutes format')], verbose_name='How long did it take you to reach there?'),
        ),
        migrations.AlterField(
            model_name='historicalmedicalexpensestwodetail',
            name='transport_form',
            field=models.CharField(choices=[('bus', 'Bus'), ('train', 'Train'), ('ambulance', 'Ambulance'), ('private_taxi', 'Private taxi'), ('hired_motorbike', 'Hired motorbike'), ('own_car', 'Own car'), ('own_motorbike', 'Own motorbike'), ('bicycle', 'Bicycle'), ('foot', 'Foot'), ('N/A', 'Not applicable')], default='N/A', max_length=20, verbose_name='Which form of transport did you take to reach there?'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='bacteria_identified',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('e_coli', 'E.coli'), ('klebsiella_sp', 'Klebsiella spp.'), ('streptococcus_pneumoniae', 'Streptococcus pneumoniae'), ('staphylococus_aureus', '(Sensitive) Staphylococus aureus'), ('mrsa', 'MRSA'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='If bacteria, type'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='bacteria_identified_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='blood_culture_organism_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='day_biopsy_taken',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(70)], verbose_name='If positive, Study day positive culture sample taken'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='day_blood_taken',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(70)], verbose_name='If positive, study day positive culture sample taken'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='sputum_afb_performed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Was sputum AFB done?', max_length=5, verbose_name='AFB microscopy performed?'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='sputum_genexpert_date',
            field=models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date sputum Gene-Xpert taken'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='sputum_genexpert_performed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=15, verbose_name='Sputum Gene-Xpert performed?'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='sputum_performed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=15, verbose_name='Culture performed?'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='sputum_result_genexpert',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('N/A', 'Not applicable')], default='N/A', max_length=15, verbose_name='Gene-Xpert results'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='sputum_results_afb',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('N/A', 'Not applicable')], default='N/A', max_length=10, verbose_name='AFB results'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='tissue_biopsy_organism_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='tissue_biopsy_results',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('no_growth', 'No growth'), ('POS', 'Positive')], default='N/A', max_length=10, verbose_name='If YES, results'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='urine_culture_organism',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('e_coli', 'E.coli'), ('klebsiella_sp', 'Klebsiella spp.'), ('OTHER', 'Other')], default='N/A', max_length=25, verbose_name='If positive, organism'),
        ),
        migrations.AlterField(
            model_name='historicalmicrobiology',
            name='urine_culture_organism_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='arv_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='If YES, date ARVs were started.'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='dia_blood_pressure',
            field=models.IntegerField(help_text='in Hg. format DIA, e.g. 80', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(150)], verbose_name='Blood pressure: diastolic'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='ecog_score',
            field=models.CharField(choices=[('0', 'Fully active, able to carry on all pre-disease performance without restriction'), ('1', 'Restricted in physically strenuous activity but ambulatory and able to carry out work of a light or sedentary nature, e.g., light house work, office work'), ('2', 'Ambulatory and capable of all self-care but unable to carry out any work activities; up and about more than 50% of waking hours '), ('3', 'Capable of only limited self-care; confined to bed or chair more than 50% of waking hours'), ('4', 'Completely disabled; cannot carry on any self-care; totally confined to bed or chair'), ('5', 'Deceased')], max_length=15, verbose_name='ECOG Disability Score'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='ecog_score_value',
            field=models.CharField(choices=[('0', 'Fully active, able to carry on all pre-disease performance without restriction'), ('1', 'Restricted in physically strenuous activity but ambulatory and able to carry out work of a light or sedentary nature, e.g., light house work, office work'), ('2', 'Ambulatory and capable of all self-care but unable to carry out any work activities; up and about more than 50% of waking hours '), ('3', 'Capable of only limited self-care; confined to bed or chair more than 50% of waking hours'), ('4', 'Completely disabled; cannot carry on any self-care; totally confined to bed or chair'), ('5', 'Deceased')], max_length=15, verbose_name='ECOG Score'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='first_arv_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_EFV_or_NVP', 'TDF + 3TC/FTC + either EFV or NVP or DTG'), ('AZT_3TC_with_EFV_NVP_or_DTG', 'AZT+3TC+ either EFV or NVP or DTG'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='Drug used in first line ARV regimen'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='first_line_choice',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('EFV', 'EFV'), ('DTG', 'DTG'), ('NVP', 'NVP')], default='N/A', max_length=5, verbose_name='If first line:'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='focal_neurologic_deficit',
            field=models.TextField(blank=True, null=True, verbose_name='If "Focal neurologic deficit" chosen, please specify details:'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='heart_rate',
            field=models.IntegerField(help_text='bpm', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)], verbose_name='Heart rate:'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='last_cd4',
            field=models.IntegerField(blank=True, help_text='acceptable units are mm<sup>3</sup>', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2500)], verbose_name='Last CD4, if known?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='last_dose',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='If NO, how many months since the last dose taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='left_acuity',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, verbose_name='Visual acuity left eye:'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='neurological_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=250, null=True, verbose_name='If "Other CN palsy", specify'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='respiratory_rate',
            field=models.IntegerField(help_text='breaths/min', validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(50)], verbose_name='Respiratory rate:'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='rifampicin_started_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='If YES, when did you first start taking Rifampicin?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='right_acuity',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, verbose_name='Visual acuity right eye'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='second_arv_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_ATZ_r_or_Lopinavir_r', 'TDF + 3TC/FTC + either ATZ/r or Lopinavir/r'), ('AZT_3TC_with_ATZ_r_or_Lopinavir_r', 'AZT +3TC + either ATZ/r or Lopinavir/r'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='Second line ARV regimen'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='specify_medications_other',
            field=models.TextField(blank=True, max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='sys_blood_pressure',
            field=models.IntegerField(help_text='in mm. format SYS, e.g. 120', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(220)], verbose_name='Blood pressure: systolic'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='tablets_missed',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)], verbose_name='If NO, how many tablets missed in the last month?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='taking_arv',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=5, verbose_name='If NO, already taking ARVs?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='taking_rifampicin',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=5, verbose_name='If YES, are you currently also taking Rifampicin?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='tb_site',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('pulmonary', 'Pulmonary'), ('extra_pulmonary', 'Extra-pulmonary'), ('both', 'Both')], default='N/A', max_length=15, verbose_name='If YES, site of TB?'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='viral_load_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Viral Load date'),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='vl_date_estimated',
            field=edc_base.model_fields.date_estimated.IsDateEstimatedFieldNa(choices=[('N/A', 'Not applicable'), ('not_estimated', 'No.'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], default='N/A', help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, verbose_name="Is the subject's Viral Load date estimated?"),
        ),
        migrations.AlterField(
            model_name='historicalpatienthistory',
            name='weight',
            field=models.DecimalField(decimal_places=1, help_text='kg', max_digits=4, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(150)], verbose_name='Weight:'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='ambisome_dose_time_ended',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time Ambisome infusion stopped'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='ambisome_dose_time_started',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time Ambisome infusion started?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_five_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;5</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_five_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;5</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_four_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;4</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_four_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;4</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_one_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;1</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_one_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;1</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_six_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;6</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_three_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;3</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_three_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;3</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_two_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;2</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='blood_sample_two_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;2</u> taken?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='cd4_cell_count',
            field=models.IntegerField(help_text='in cells/mm<sup>3</sup>', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)], verbose_name='CD4 cell count'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='flucytosine_dose',
            field=models.IntegerField(null=True, verbose_name='Was the dose of Flucytosine given?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='flucytosine_dose_four_time',
            field=models.TimeField(null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;4</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='flucytosine_dose_one_time',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;1</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='flucytosine_dose_three_time',
            field=models.TimeField(null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;3</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='flucytosine_dose_two_time',
            field=models.TimeField(null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;2</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='flucytosine_doses_missed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True, verbose_name='Were any Flucytosine doses missed?'),
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='on_art',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True, verbose_name='On Antiretroviral treatment?'),
        ),
        migrations.AlterField(
            model_name='historicalpreviousopportunisticinfection',
            name='previous_non_tb_oi',
            field=models.CharField(blank=True, choices=[('kaposi_sarcoma', 'Kaposi Sarcoma'), ('herpes_zoster_virus', 'Herpes-Zoster virus'), ('oesophageal_candidiasis', 'Oesophageal Candidiasis'), ('PCP', 'PCP'), ('cytomegalovirus', 'Cytomegalovirus'), ('OTHER', 'Other')], max_length=25, verbose_name='If other previous opportunistic infection, please specify.'),
        ),
        migrations.AlterField(
            model_name='historicalpreviousopportunisticinfection',
            name='previous_non_tb_oi_other',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='historicalprnmodel',
            name='cd4',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add CD4'),
        ),
        migrations.AlterField(
            model_name='historicalprnmodel',
            name='viral_load',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add Viral Load'),
        ),
        migrations.AlterField(
            model_name='historicalprotocoldeviationviolation',
            name='action_required',
            field=models.CharField(blank=True, choices=[('remain_on_study', 'Participant to remain on trial'), ('to_be_withdrawn', 'Participant to be withdrawn from trial'), ('remain_on_study_modified', 'Patient remains on study but data analysis will be modified')], max_length=45, null=True),
        ),
        migrations.AlterField(
            model_name='historicalradiology',
            name='brain_imaging_reason',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('reduction_in_gcs', 'Reduction in GCS'), ('new_neurology', 'New neurology'), ('OTHER', 'Other')], default='N/A', max_length=25, null=True, verbose_name='Reason for brain imaging'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='amb_duration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='If YES, specify length of course'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='dr_opinion',
            field=models.CharField(choices=[('cm_release', 'CM Relapse'), ('cm_iris', 'CM IRIS'), ('OTHER', 'Other')], max_length=10, verbose_name="Study doctor's opinion:"),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='dr_opinion_other',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name="If other doctor's opinion, please specify"),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='focal_neurologic_deficit',
            field=models.CharField(blank=True, max_length=15, null=True, verbose_name='If "Focal neurologic deficit" chosen, please specify'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='on_arvs',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('on_arvs_before_enrollment', 'Already on ARVs before enrollment')], max_length=26, verbose_name='On ARVs:'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='patient_readmitted',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If YES, complete AE CRF.', max_length=5, verbose_name='Has the patient been readmitted due to these recurrent symptoms?'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='steroids_choices',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('oral_prednisolone', 'Oral Prednisolone'), ('iv_dexamethasone', 'IV Dexamethasone used'), ('OTHER', 'Other')], default='N/A', max_length=25, verbose_name='If YES'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='steroids_duration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='If YES, specify the length of course in days:'),
        ),
        migrations.AlterField(
            model_name='historicalrecurrencesymptom',
            name='tb_treatment',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, verbose_name='TB treatment:'),
        ),
        migrations.AlterField(
            model_name='historicalsignificantdiagnoses',
            name='possible_diagnoses',
            field=models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('extra_pulmonary_tb', 'Extra-pulmonary TB'), ('kaposi_sarcoma', 'Kaposi-sarcoma'), ('malaria', 'Malaria'), ('bacteraemia', 'Bacteraemia'), ('pneumonia', 'Pneumonia'), ('diarrhoeal_wasting', 'Diarrhoeal wasting'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='Significant diagnoses:'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='first_line_choice',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('EFV', 'EFV'), ('DTG', 'DTG'), ('NVP', 'NVP')], default='N/A', max_length=5, verbose_name='If first line:'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='first_line_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_EFV_or_NVP', 'TDF + 3TC/FTC + either EFV or NVP or DTG'), ('AZT_3TC_with_EFV_NVP_or_DTG', 'AZT+3TC+ either EFV or NVP or DTG'), ('OTHER', 'Other')], default='N/A', max_length=75, verbose_name='ART regimen started for naive patients (or regimen switched for those already on ARVs)'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='second_line_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_ATZ_r_or_Lopinavir_r', 'TDF + 3TC/FTC + either ATZ/r or Lopinavir/r'), ('AZT_3TC_with_ATZ_r_or_Lopinavir_r', 'AZT +3TC + either ATZ/r or Lopinavir/r'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='Second line / second switch ARV regimen'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='termination_reason',
            field=models.CharField(choices=[('10_weeks_completed_follow_up', 'Patient completed 10 weeks of follow-up'), ('patient_lost_to_follow_up', 'Patient lost to follow-up'), ('dead', 'Reported/known to have died'), ('consent_withdrawn', 'Withdrawal of Subject Consent for participation'), ('care_transferred_to_another_institution', 'Care transferred to another institution'), ('late_exclusion_criteria_met', 'Late exclusion criteria met'), ('included_in_error', 'Included in error')], help_text='If included in error, be sure to fill in protocol deviation form.', max_length=75, verbose_name='Reason for study termination'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='willing_to_complete_10w',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=12, verbose_name='Is the patient willing to complete the W10 and W16 FU visit only?'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='willing_to_complete_centre',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=17, verbose_name='Is the patient willing to complete the W10and W16 FU visit only at their new care centre?'),
        ),
        migrations.AlterField(
            model_name='historicalstudyterminationconclusion',
            name='willing_to_complete_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name=' Date the 10W FU due'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='identity_type',
            field=models.CharField(choices=[('country_id', 'Country ID number'), ('drivers', "Driver's license"), ('passport', 'Passport'), ('hospital_no', 'Hospital number'), ('country_id_rcpt', 'Country ID receipt'), ('OTHER', 'Other')], max_length=25, verbose_name='What type of identity number is this?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='screening_identifier',
            field=models.CharField(max_length=50, verbose_name='Screening identifier'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectlocator',
            name='may_call_work',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Doesnt_work', "Doesn't work")], max_length=25, verbose_name='Has the participant given his/her permission for study staff to contact him/her at work for follow up purposes during the study?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectvisit',
            name='info_source',
            field=models.CharField(choices=[('hospital_notes', 'Hospital notes'), ('outpatient_cards', 'Outpatient cards'), ('patient', 'Patient'), ('collateral_history', 'Collateral History from relative/guardian'), ('OTHER', 'Other')], max_length=25, verbose_name='What is the main source of this information?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectvisit',
            name='reason_unscheduled',
            field=models.CharField(blank=True, choices=[('patient_unwell_outpatient', 'Patient unwell (outpatient)'), ('recurrence_symptoms', 'Recurrence of symptoms'), ('raised_icp_management', 'Raised ICP management'), ('art_initiation', 'ART initiation'), ('patient_hospitalised', 'Patient hospitalised'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name="If 'Unscheduled' above, provide reason for the unscheduled visit"),
        ),
        migrations.AlterField(
            model_name='historicalsubjectvisit',
            name='reason_unscheduled_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalweek16',
            name='rankin_score',
            field=models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('not_done', 'Not done')], max_length=10, verbose_name='Modified Rankin score'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='amphotericin_missed_doses',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Were any Amphotericin B drug doses missed?'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='behaviour_change',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Behaviour change'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='cn_palsy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='CN palsy'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='confusion',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Confusion'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='focal_neurology',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Focal neurology'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='headache',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Headache'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='physical_symptoms',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Physical symptoms'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='recent_seizure_less_72',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Recent seizure (<72 hrs)'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='units',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='If YES, no. of units'),
        ),
        migrations.AlterField(
            model_name='historicalweek2',
            name='weight',
            field=models.DecimalField(decimal_places=1, help_text='kg', max_digits=4, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(150)], verbose_name='Weight:'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='behaviour_change',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Behaviour change'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='cn_palsy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='CN palsy'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='confusion',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Confusion'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='fluconazole_dose',
            field=models.CharField(choices=[('800mg_daily', '800mg daily'), ('OTHER', 'Other'), ('not_done', 'Not done')], max_length=25, verbose_name='Fluconazole dose (day prior to visit)'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='fluconazole_dose_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='focal_neurology',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Focal neurology'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='headache',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Headache'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='physical_symptoms',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Physical symptoms'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='recent_seizure_less_72',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Recent seizure (<72 hrs)'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='rifampicin_start_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date Rifampicin started'),
        ),
        migrations.AlterField(
            model_name='historicalweek4',
            name='rifampicin_started',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('already_on_rifampicin', 'Already on Rifampicin'), ('not_done', 'Not done')], max_length=25, verbose_name='Rifampicin started since last visit?'),
        ),
        migrations.AlterField(
            model_name='historicalweek4diagnoses',
            name='possible_diagnoses',
            field=models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('extra_pulmonary_tb', 'Extra-pulmonary TB'), ('kaposi_sarcoma', 'Kaposi-sarcoma'), ('malaria', 'Malaria'), ('bacteraemia', 'Bacteraemia'), ('pneumonia', 'Pneumonia'), ('diarrhoeal_wasting', 'Diarrhoeal wasting'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='Significant diagnoses:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='closing_pressure',
            field=models.IntegerField(help_text='Units cm of H<sub>2</sub>O', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)]),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='csf_cr_ag',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate'), ('not_done', 'Not done')], max_length=15, null=True, verbose_name='CSF CrAg:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='csf_cr_ag_lfa',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=5, verbose_name='CSF CrAg done by CSF CrAg LFA:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='csf_culture',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], help_text='Complete after getting the results.', max_length=15, null=True, verbose_name='Other organism (non-Cryptococcus)'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='csf_wbc_cell_count',
            field=models.IntegerField(help_text='acceptable units are mm<sup>3</sup>', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Total CSF WBC cell count:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='differential_lymphocyte_count',
            field=models.IntegerField(blank=True, help_text='acceptable units are mm<sup>3</sup> or %', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Differential lymphocyte cell count:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='differential_lymphocyte_unit',
            field=models.CharField(choices=[('mm3', 'mm<sup>3</sup>'), ('%', '%'), ('N/A', 'Not applicable')], default='N/A', max_length=6),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='differential_neutrophil_count',
            field=models.IntegerField(blank=True, help_text='acceptable units are mm<sup>3</sup> or %', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Differential neutrophil cell count:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='differential_neutrophil_unit',
            field=models.CharField(choices=[('mm3', 'mm<sup>3</sup>'), ('%', '%'), ('N/A', 'Not applicable')], default='N/A', max_length=3),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='india_ink',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate'), ('not_done', 'Not done')], max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='opening_pressure',
            field=models.IntegerField(help_text='Units cm of H<sub>2</sub>O', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)]),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='other_csf_culture',
            field=models.CharField(blank=True, max_length=75, null=True, verbose_name='If YES, specify organism:'),
        ),
        migrations.AlterField(
            model_name='lumbarpuncturecsf',
            name='reason_for_lp',
            field=models.CharField(choices=[('scheduled_per_protocol', 'Scheduled per protocol'), ('therapeutic_lp', 'Therapeutic LP'), ('clincal_deterioration', 'Clinical deterioration')], max_length=50, verbose_name='Reason for LP'),
        ),
        migrations.AlterField(
            model_name='medicalexpenses',
            name='activities_missed',
            field=models.CharField(choices=[('working', 'Working'), ('studying', 'Studying'), ('caring_for_children', 'Caring for children'), ('maintaining_house', 'Maintaining the house'), ('nothing', 'Nothing'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='What would you have been doing if you were not sick with your present condition'),
        ),
        migrations.AlterField(
            model_name='medicalexpenses',
            name='activities_missed_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='medicalexpenses',
            name='care_before_hospital',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If YES, please complete medical expenses part 2', max_length=5, verbose_name='Have you received any treatment or care for your present condition, before coming to the hospital?'),
        ),
        migrations.AlterField(
            model_name='medicalexpenses',
            name='form_of_transport',
            field=models.CharField(choices=[('bus', 'Bus'), ('train', 'Train'), ('ambulance', 'Ambulance'), ('private_taxi', 'Private taxi'), ('hired_motorbike', 'Hired motorbike'), ('own_car', 'Own car'), ('own_motorbike', 'Own motorbike'), ('bicycle', 'Bicycle'), ('foot', 'Foot'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name='Which form of transport did you take to get here today?'),
        ),
        migrations.AlterField(
            model_name='medicalexpenses',
            name='travel_time',
            field=models.CharField(blank=True, help_text='Specify as hours:minutes (format HH:MM)', max_length=8, null=True, validators=[django.core.validators.RegexValidator('^([0-9]{1,3}:[0-5][0-9])$', message='Enter a valid time in hour:minutes format')], verbose_name='How long did it take you to reach there?'),
        ),
        migrations.AlterField(
            model_name='medicalexpensestwodetail',
            name='care_provider_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='medicalexpensestwodetail',
            name='location_care',
            field=models.CharField(choices=[('government_healthcare', 'Government healthcare'), ('private_healthcare', 'Private healthcare'), ('ngo_healthcare', 'NGO healthcare'), ('pharmacy', 'Pharmacy'), ('home', 'Home'), ('OTHER', 'Other')], max_length=35, verbose_name='Where did you receive treatment or care?'),
        ),
        migrations.AlterField(
            model_name='medicalexpensestwodetail',
            name='other_place_visited',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If YES, click "Add another Medical Expenses Part 2: Detail" below.', max_length=15, verbose_name='Before this, did you go to another place for the treatment of the present situation?'),
        ),
        migrations.AlterField(
            model_name='medicalexpensestwodetail',
            name='transport_duration',
            field=models.CharField(blank=True, help_text='Specify as hours:minutes (format HH:MM)', max_length=8, null=True, validators=[django.core.validators.RegexValidator('^([0-9]{1,3}:[0-5][0-9])$', message='Enter a valid time in hour:minutes format')], verbose_name='How long did it take you to reach there?'),
        ),
        migrations.AlterField(
            model_name='medicalexpensestwodetail',
            name='transport_form',
            field=models.CharField(choices=[('bus', 'Bus'), ('train', 'Train'), ('ambulance', 'Ambulance'), ('private_taxi', 'Private taxi'), ('hired_motorbike', 'Hired motorbike'), ('own_car', 'Own car'), ('own_motorbike', 'Own motorbike'), ('bicycle', 'Bicycle'), ('foot', 'Foot'), ('N/A', 'Not applicable')], default='N/A', max_length=20, verbose_name='Which form of transport did you take to reach there?'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='bacteria_identified',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('e_coli', 'E.coli'), ('klebsiella_sp', 'Klebsiella spp.'), ('streptococcus_pneumoniae', 'Streptococcus pneumoniae'), ('staphylococus_aureus', '(Sensitive) Staphylococus aureus'), ('mrsa', 'MRSA'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='If bacteria, type'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='bacteria_identified_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='blood_culture_organism_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='day_biopsy_taken',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(70)], verbose_name='If positive, Study day positive culture sample taken'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='day_blood_taken',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(70)], verbose_name='If positive, study day positive culture sample taken'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='sputum_afb_performed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Was sputum AFB done?', max_length=5, verbose_name='AFB microscopy performed?'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='sputum_genexpert_date',
            field=models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date sputum Gene-Xpert taken'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='sputum_genexpert_performed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=15, verbose_name='Sputum Gene-Xpert performed?'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='sputum_performed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=15, verbose_name='Culture performed?'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='sputum_result_genexpert',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('N/A', 'Not applicable')], default='N/A', max_length=15, verbose_name='Gene-Xpert results'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='sputum_results_afb',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('N/A', 'Not applicable')], default='N/A', max_length=10, verbose_name='AFB results'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='tissue_biopsy_organism_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='tissue_biopsy_results',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('no_growth', 'No growth'), ('POS', 'Positive')], default='N/A', max_length=10, verbose_name='If YES, results'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='urine_culture_organism',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('e_coli', 'E.coli'), ('klebsiella_sp', 'Klebsiella spp.'), ('OTHER', 'Other')], default='N/A', max_length=25, verbose_name='If positive, organism'),
        ),
        migrations.AlterField(
            model_name='microbiology',
            name='urine_culture_organism_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=50, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='arv_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='If YES, date ARVs were started.'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='dia_blood_pressure',
            field=models.IntegerField(help_text='in Hg. format DIA, e.g. 80', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(150)], verbose_name='Blood pressure: diastolic'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='ecog_score',
            field=models.CharField(choices=[('0', 'Fully active, able to carry on all pre-disease performance without restriction'), ('1', 'Restricted in physically strenuous activity but ambulatory and able to carry out work of a light or sedentary nature, e.g., light house work, office work'), ('2', 'Ambulatory and capable of all self-care but unable to carry out any work activities; up and about more than 50% of waking hours '), ('3', 'Capable of only limited self-care; confined to bed or chair more than 50% of waking hours'), ('4', 'Completely disabled; cannot carry on any self-care; totally confined to bed or chair'), ('5', 'Deceased')], max_length=15, verbose_name='ECOG Disability Score'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='ecog_score_value',
            field=models.CharField(choices=[('0', 'Fully active, able to carry on all pre-disease performance without restriction'), ('1', 'Restricted in physically strenuous activity but ambulatory and able to carry out work of a light or sedentary nature, e.g., light house work, office work'), ('2', 'Ambulatory and capable of all self-care but unable to carry out any work activities; up and about more than 50% of waking hours '), ('3', 'Capable of only limited self-care; confined to bed or chair more than 50% of waking hours'), ('4', 'Completely disabled; cannot carry on any self-care; totally confined to bed or chair'), ('5', 'Deceased')], max_length=15, verbose_name='ECOG Score'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='first_arv_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_EFV_or_NVP', 'TDF + 3TC/FTC + either EFV or NVP or DTG'), ('AZT_3TC_with_EFV_NVP_or_DTG', 'AZT+3TC+ either EFV or NVP or DTG'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='Drug used in first line ARV regimen'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='first_line_choice',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('EFV', 'EFV'), ('DTG', 'DTG'), ('NVP', 'NVP')], default='N/A', max_length=5, verbose_name='If first line:'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='focal_neurologic_deficit',
            field=models.TextField(blank=True, null=True, verbose_name='If "Focal neurologic deficit" chosen, please specify details:'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='heart_rate',
            field=models.IntegerField(help_text='bpm', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)], verbose_name='Heart rate:'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='last_cd4',
            field=models.IntegerField(blank=True, help_text='acceptable units are mm<sup>3</sup>', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2500)], verbose_name='Last CD4, if known?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='last_dose',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='If NO, how many months since the last dose taken?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='left_acuity',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, verbose_name='Visual acuity left eye:'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='neurological_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=250, null=True, verbose_name='If "Other CN palsy", specify'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='respiratory_rate',
            field=models.IntegerField(help_text='breaths/min', validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(50)], verbose_name='Respiratory rate:'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='rifampicin_started_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='If YES, when did you first start taking Rifampicin?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='right_acuity',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True, verbose_name='Visual acuity right eye'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='second_arv_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_ATZ_r_or_Lopinavir_r', 'TDF + 3TC/FTC + either ATZ/r or Lopinavir/r'), ('AZT_3TC_with_ATZ_r_or_Lopinavir_r', 'AZT +3TC + either ATZ/r or Lopinavir/r'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='Second line ARV regimen'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='specify_medications_other',
            field=models.TextField(blank=True, max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='sys_blood_pressure',
            field=models.IntegerField(help_text='in mm. format SYS, e.g. 120', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(220)], verbose_name='Blood pressure: systolic'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='tablets_missed',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)], verbose_name='If NO, how many tablets missed in the last month?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='taking_arv',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=5, verbose_name='If NO, already taking ARVs?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='taking_rifampicin',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=5, verbose_name='If YES, are you currently also taking Rifampicin?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='tb_site',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('pulmonary', 'Pulmonary'), ('extra_pulmonary', 'Extra-pulmonary'), ('both', 'Both')], default='N/A', max_length=15, verbose_name='If YES, site of TB?'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='viral_load_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Viral Load date'),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='vl_date_estimated',
            field=edc_base.model_fields.date_estimated.IsDateEstimatedFieldNa(choices=[('N/A', 'Not applicable'), ('not_estimated', 'No.'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], default='N/A', help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, verbose_name="Is the subject's Viral Load date estimated?"),
        ),
        migrations.AlterField(
            model_name='patienthistory',
            name='weight',
            field=models.DecimalField(decimal_places=1, help_text='kg', max_digits=4, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(150)], verbose_name='Weight:'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='ambisome_dose_time_ended',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time Ambisome infusion stopped'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='ambisome_dose_time_started',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time Ambisome infusion started?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_five_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;5</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_five_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;5</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_four_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;4</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_four_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;4</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_one_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;1</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_one_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;1</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_six_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;6</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_three_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;3</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_three_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;3</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_two_day_one',
            field=models.TimeField(blank=True, max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;2</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='blood_sample_two_day_seven',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time blood <u>SAMPLE&nbsp;2</u> taken?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='cd4_cell_count',
            field=models.IntegerField(help_text='in cells/mm<sup>3</sup>', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999)], verbose_name='CD4 cell count'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='flucytosine_dose',
            field=models.IntegerField(null=True, verbose_name='Was the dose of Flucytosine given?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='flucytosine_dose_four_time',
            field=models.TimeField(null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;4</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='flucytosine_dose_one_time',
            field=models.TimeField(max_length=5, null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;1</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='flucytosine_dose_three_time',
            field=models.TimeField(null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;3</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='flucytosine_dose_two_time',
            field=models.TimeField(null=True, verbose_name='Time Flucytosine <u>DOSE&nbsp;2</u> was swallowed?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='flucytosine_doses_missed',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True, verbose_name='Were any Flucytosine doses missed?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='on_art',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, null=True, verbose_name='On Antiretroviral treatment?'),
        ),
        migrations.AlterField(
            model_name='previousopportunisticinfection',
            name='previous_non_tb_oi',
            field=models.CharField(blank=True, choices=[('kaposi_sarcoma', 'Kaposi Sarcoma'), ('herpes_zoster_virus', 'Herpes-Zoster virus'), ('oesophageal_candidiasis', 'Oesophageal Candidiasis'), ('PCP', 'PCP'), ('cytomegalovirus', 'Cytomegalovirus'), ('OTHER', 'Other')], max_length=25, verbose_name='If other previous opportunistic infection, please specify.'),
        ),
        migrations.AlterField(
            model_name='previousopportunisticinfection',
            name='previous_non_tb_oi_other',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='prnmodel',
            name='cd4',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add CD4'),
        ),
        migrations.AlterField(
            model_name='prnmodel',
            name='viral_load',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=5, verbose_name='Add Viral Load'),
        ),
        migrations.AlterField(
            model_name='protocoldeviationviolation',
            name='action_required',
            field=models.CharField(blank=True, choices=[('remain_on_study', 'Participant to remain on trial'), ('to_be_withdrawn', 'Participant to be withdrawn from trial'), ('remain_on_study_modified', 'Patient remains on study but data analysis will be modified')], max_length=45, null=True),
        ),
        migrations.AlterField(
            model_name='radiology',
            name='brain_imaging_reason',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('reduction_in_gcs', 'Reduction in GCS'), ('new_neurology', 'New neurology'), ('OTHER', 'Other')], default='N/A', max_length=25, null=True, verbose_name='Reason for brain imaging'),
        ),
        migrations.AlterField(
            model_name='radiology',
            name='cxr_type',
            field=models.ManyToManyField(blank=True, to='ambition_subject.CXRType', verbose_name='If YES, result'),
        ),
        migrations.AlterField(
            model_name='radiology',
            name='infiltrate_location',
            field=models.ManyToManyField(blank=True, to='ambition_subject.InfiltrateLocation', verbose_name='If infiltrates, specify location'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='amb_duration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='If YES, specify length of course'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='dr_opinion',
            field=models.CharField(choices=[('cm_release', 'CM Relapse'), ('cm_iris', 'CM IRIS'), ('OTHER', 'Other')], max_length=10, verbose_name="Study doctor's opinion:"),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='dr_opinion_other',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name="If other doctor's opinion, please specify"),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='focal_neurologic_deficit',
            field=models.CharField(blank=True, max_length=15, null=True, verbose_name='If "Focal neurologic deficit" chosen, please specify'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='on_arvs',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('on_arvs_before_enrollment', 'Already on ARVs before enrollment')], max_length=26, verbose_name='On ARVs:'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='patient_readmitted',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If YES, complete AE CRF.', max_length=5, verbose_name='Has the patient been readmitted due to these recurrent symptoms?'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='steroids_choices',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('oral_prednisolone', 'Oral Prednisolone'), ('iv_dexamethasone', 'IV Dexamethasone used'), ('OTHER', 'Other')], default='N/A', max_length=25, verbose_name='If YES'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='steroids_duration',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='If YES, specify the length of course in days:'),
        ),
        migrations.AlterField(
            model_name='recurrencesymptom',
            name='tb_treatment',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, verbose_name='TB treatment:'),
        ),
        migrations.AlterField(
            model_name='significantdiagnoses',
            name='possible_diagnoses',
            field=models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('extra_pulmonary_tb', 'Extra-pulmonary TB'), ('kaposi_sarcoma', 'Kaposi-sarcoma'), ('malaria', 'Malaria'), ('bacteraemia', 'Bacteraemia'), ('pneumonia', 'Pneumonia'), ('diarrhoeal_wasting', 'Diarrhoeal wasting'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='Significant diagnoses:'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='first_line_choice',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('EFV', 'EFV'), ('DTG', 'DTG'), ('NVP', 'NVP')], default='N/A', max_length=5, verbose_name='If first line:'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='first_line_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_EFV_or_NVP', 'TDF + 3TC/FTC + either EFV or NVP or DTG'), ('AZT_3TC_with_EFV_NVP_or_DTG', 'AZT+3TC+ either EFV or NVP or DTG'), ('OTHER', 'Other')], default='N/A', max_length=75, verbose_name='ART regimen started for naive patients (or regimen switched for those already on ARVs)'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='second_line_regimen',
            field=models.CharField(choices=[('N/A', 'Not applicable'), ('TDF_3TC_FTC_with_ATZ_r_or_Lopinavir_r', 'TDF + 3TC/FTC + either ATZ/r or Lopinavir/r'), ('AZT_3TC_with_ATZ_r_or_Lopinavir_r', 'AZT +3TC + either ATZ/r or Lopinavir/r'), ('OTHER', 'Other')], default='N/A', max_length=50, verbose_name='Second line / second switch ARV regimen'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='termination_reason',
            field=models.CharField(choices=[('10_weeks_completed_follow_up', 'Patient completed 10 weeks of follow-up'), ('patient_lost_to_follow_up', 'Patient lost to follow-up'), ('dead', 'Reported/known to have died'), ('consent_withdrawn', 'Withdrawal of Subject Consent for participation'), ('care_transferred_to_another_institution', 'Care transferred to another institution'), ('late_exclusion_criteria_met', 'Late exclusion criteria met'), ('included_in_error', 'Included in error')], help_text='If included in error, be sure to fill in protocol deviation form.', max_length=75, verbose_name='Reason for study termination'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='willing_to_complete_10w',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=12, verbose_name='Is the patient willing to complete the W10 and W16 FU visit only?'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='willing_to_complete_centre',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=17, verbose_name='Is the patient willing to complete the W10and W16 FU visit only at their new care centre?'),
        ),
        migrations.AlterField(
            model_name='studyterminationconclusion',
            name='willing_to_complete_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name=' Date the 10W FU due'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='identity_type',
            field=models.CharField(choices=[('country_id', 'Country ID number'), ('drivers', "Driver's license"), ('passport', 'Passport'), ('hospital_no', 'Hospital number'), ('country_id_rcpt', 'Country ID receipt'), ('OTHER', 'Other')], max_length=25, verbose_name='What type of identity number is this?'),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='screening_identifier',
            field=models.CharField(max_length=50, verbose_name='Screening identifier'),
        ),
        migrations.AlterField(
            model_name='subjectlocator',
            name='may_call_work',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Doesnt_work', "Doesn't work")], max_length=25, verbose_name='Has the participant given his/her permission for study staff to contact him/her at work for follow up purposes during the study?'),
        ),
        migrations.AlterField(
            model_name='subjectvisit',
            name='info_source',
            field=models.CharField(choices=[('hospital_notes', 'Hospital notes'), ('outpatient_cards', 'Outpatient cards'), ('patient', 'Patient'), ('collateral_history', 'Collateral History from relative/guardian'), ('OTHER', 'Other')], max_length=25, verbose_name='What is the main source of this information?'),
        ),
        migrations.AlterField(
            model_name='subjectvisit',
            name='reason_unscheduled',
            field=models.CharField(blank=True, choices=[('patient_unwell_outpatient', 'Patient unwell (outpatient)'), ('recurrence_symptoms', 'Recurrence of symptoms'), ('raised_icp_management', 'Raised ICP management'), ('art_initiation', 'ART initiation'), ('patient_hospitalised', 'Patient hospitalised'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name="If 'Unscheduled' above, provide reason for the unscheduled visit"),
        ),
        migrations.AlterField(
            model_name='subjectvisit',
            name='reason_unscheduled_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='week16',
            name='rankin_score',
            field=models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('not_done', 'Not done')], max_length=10, verbose_name='Modified Rankin score'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='amphotericin_missed_doses',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Were any Amphotericin B drug doses missed?'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='behaviour_change',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Behaviour change'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='cn_palsy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='CN palsy'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='confusion',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Confusion'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='focal_neurology',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Focal neurology'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='headache',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Headache'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='medicines',
            field=models.ManyToManyField(to='ambition_subject.Day14Medication', verbose_name='Medicine day 14:'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='physical_symptoms',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Physical symptoms'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='recent_seizure_less_72',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Recent seizure (<72 hrs)'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='units',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='If YES, no. of units'),
        ),
        migrations.AlterField(
            model_name='week2',
            name='weight',
            field=models.DecimalField(decimal_places=1, help_text='kg', max_digits=4, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(150)], verbose_name='Weight:'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='behaviour_change',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Behaviour change'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='cn_palsy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='CN palsy'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='confusion',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Confusion'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='fluconazole_dose',
            field=models.CharField(choices=[('800mg_daily', '800mg daily'), ('OTHER', 'Other'), ('not_done', 'Not done')], max_length=25, verbose_name='Fluconazole dose (day prior to visit)'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='fluconazole_dose_other',
            field=edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If Other, specify ...'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='focal_neurology',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Focal neurology'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='headache',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Headache'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='physical_symptoms',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Physical symptoms'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='recent_seizure_less_72',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('not_done', 'Not done')], max_length=10, null=True, verbose_name='Recent seizure (<72 hrs)'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='rifampicin_start_date',
            field=models.DateField(blank=True, null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date Rifampicin started'),
        ),
        migrations.AlterField(
            model_name='week4',
            name='rifampicin_started',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('already_on_rifampicin', 'Already on Rifampicin'), ('not_done', 'Not done')], max_length=25, verbose_name='Rifampicin started since last visit?'),
        ),
        migrations.AlterField(
            model_name='week4diagnoses',
            name='possible_diagnoses',
            field=models.CharField(blank=True, choices=[('pulmonary_tb', 'Pulmonary TB'), ('extra_pulmonary_tb', 'Extra-pulmonary TB'), ('kaposi_sarcoma', 'Kaposi-sarcoma'), ('malaria', 'Malaria'), ('bacteraemia', 'Bacteraemia'), ('pneumonia', 'Pneumonia'), ('diarrhoeal_wasting', 'Diarrhoeal wasting'), ('OTHER', 'Other')], max_length=25, null=True, verbose_name='Significant diagnoses:'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollmentw10',
            unique_together={('subject_identifier', 'visit_schedule_name', 'schedule_name')},
        ),
    ]
