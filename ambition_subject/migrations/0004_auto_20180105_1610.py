# Generated by Django 2.0.1 on 2018-01-05 14:10

import _socket
from django.db import migrations, models
import django_revision.revision_field
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.utils
import edc_consent.validators


class Migration(migrations.Migration):

    dependencies = [
        ('ambition_subject', '0003_auto_20180105_1310'),
    ]

    operations = [
        migrations.CreateModel(
            name='MissedDoses',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='historicalpkpdcrf',
            name='flucytosine_dose_missed',
        ),
        migrations.AlterField(
            model_name='historicalpkpdcrf',
            name='albumin',
            field=models.IntegerField(blank=True, help_text='Units in g/L', null=True, verbose_name='Albumin'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='is_incarcerated',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP participant cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?'),
        ),
        migrations.AlterField(
            model_name='pkpdcrf',
            name='albumin',
            field=models.IntegerField(blank=True, help_text='Units in g/L', null=True, verbose_name='Albumin'),
        ),
        migrations.RemoveField(
            model_name='pkpdcrf',
            name='flucytosine_dose_missed',
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='is_incarcerated',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP participant cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?'),
        ),
        migrations.AddField(
            model_name='pkpdcrf',
            name='flucytosine_dose_missed',
            field=models.ManyToManyField(blank=True, to='ambition_subject.MissedDoses', verbose_name='Which dose(s) was/were missed?'),
        ),
    ]
